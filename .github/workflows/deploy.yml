name: Deploy

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x to build
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm ci
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-20.x-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/

  lint:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-20.x-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-restore.outputs.cache-hit != 'true'
      - run: npm run lint

  deploy:
    needs: lint
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: ssh deploy to midi server
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.KEY }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USER }}
          REMOTE_PORT: ${{ secrets.PORT }}
          TARGET: ${{ secrets.TARGET }}
